Text
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--USE [DWH]    
--GO    
--/****** Object:  StoredProcedure [dbo].[USP_GET_SMS_NOTIF]    Script Date: 9/22/2023 2:47:37 PM ******/    
--SET ANSI_NULLS ON    
--GO    
--SET QUOTED_IDENTIFIER ON    
--GO      
/*      
 PROCEDURE FOR GENERATE SMS NOTIF - ADD BY DWT 2022 07 08           
*/      
CREATE PROCEDURE [dbo].[USP_GET_SMS_NOTIF] (@PDATE DATETIME,@SMS_TYPE VARCHAR(30) )      
AS      
BEGIN      
  
 SET NOCOUNT ON      
      
 DECLARE @SMS_WORDING VARCHAR(300),@SMS_COST_CENTER VARCHAR(50),@POLNUM VARCHAR(10),@MATURITY_DATE DATETIME,@OWNNAME VARCHAR(200)      
 IF OBJECT_ID('DATA_SMS','U') IS NOT NULL      
 BEGIN      
  DROP TABLE dbo.DATA_SMS     
 END      
 CREATE TABLE dbo.DATA_SMS(POLICYNUMBER VARCHAR(8),AGENTCODE VARCHAR(12),MOBILENUMBER VARCHAR(30),MSG VARCHAR(200),MSG_TYPE VARCHAR(50),COST_CENTER VARCHAR(20),SRC VARCHAR(15),ENV VARCHAR(15),GENERATE_DATE DATETIME)      
        
 DECLARE @TYPE_EXCLUDE VARCHAR(30) 
     
 DROP TABLE IF EXISTS CURSOR_SMS_TYPE    
 CREATE TABLE CURSOR_SMS_TYPE (SMS_TYPE varchar(30),SMS_WORDING varchar(500),SMS_COST_CENTER varchar(50))    
    
 IF @SMS_TYPE = 'ALL'      
  INSERT INTO CURSOR_SMS_TYPE    
  SELECT DISTINCT SMS_TYPE,SMS_WORDING,SMS_COST_CENTER    
  FROM SMS_CONFIG    
  WHERE SMS_TYPE not in ('RDAPPR','WDAPPR','SMSDEBETDMTM','EXPIREDCC')      
 ELSE      
  INSERT INTO CURSOR_SMS_TYPE    
  SELECT DISTINCT SMS_TYPE,SMS_WORDING,SMS_COST_CENTER    
  FROM SMS_CONFIG    
  WHERE SMS_TYPE = @SMS_TYPE    
      
 DECLARE CURSOR2 CURSOR          
   FOR            
   SELECT SMS_TYPE,SMS_WORDING,SMS_COST_CENTER FROM CURSOR_SMS_TYPE    
    
   OPEN CURSOR2          
   FETCH NEXT FROM CURSOR2 INTO  @SMS_TYPE,@SMS_WORDING,@SMS_COST_CENTER        
   WHILE @@FETCH_STATUS = 0          
   BEGIN         
   IF @SMS_TYPE='MTRCST' OR @SMS_TYPE='ALL'      
   BEGIN      
    INSERT INTO DATA_SMS    
    SELECT    
    POLICYNUMBER= PM.POLICY_NUMBER         
    ,AGENTCODE=''      
    ,MOBILENUMBER=    
   isnull(        
   CASE         
    WHEN PM.MOBILENO IS NOT NULL AND PM.MOBILENO <> ''  AND PM.MOBILENO <> '0' THEN        
     CASE         
   WHEN LEFT(PM.MOBILENO,1) IN ( '8','2') THEN '62'+convert(varchar(20),PM.MOBILENO)         
   WHEN LEFT(PM.MOBILENO,1) IN ( '0') THEN '62'+substring(convert(varchar(20),PM.MOBILENO),2,99)        
   ELSE PM.MOBILENO        
     END        
    ELSE convert(varchar(20),PM.MOBILENO)         
   END,'0')        
    ,MSG = REPLACE(REPLACE(@SMS_WORDING,'@POLNUM',POLICY_NUMBER),'@MATURITY_DATE',CONVERT(VARCHAR(10),MATURITYDATE,103))       
  ,MSG_TYPE = @SMS_TYPE       
  ,COST_CENTER=@SMS_COST_CENTER      
  ,SRC =  'FWD'        
  ,ENV='PRD'        
  ,GENERATE_DATE=@PDATE      
    FROM dbo.REPORT_MATURITY_LETTER_HISTORY  PM WITH (NOLOCK)        
    LEFT JOIN DATA_SMS_HISTORY D ON PM.POLICY_NUMBER=D.POLICYNUMBER AND  PM.[GENERATE DATE] =DATEADD(DAY,-1,D.GENERATE_DATE) AND D.MSG_TYPE=@SMS_TYPE AND COST_CENTER=@SMS_COST_CENTER      
    WHERE MOBILENO<>'' AND PM.[GENERATE DATE] =DATEADD(DAY,-1,@PDATE) AND D.POLICYNUMBER IS NULL      
   END      
       
   IF @SMS_TYPE='MTRAGT'OR @SMS_TYPE='ALL'      
   BEGIN      
    INSERT INTO DATA_SMS    
    SELECT    
    POLICYNUMBER= PM.POLICY_NUMBER         
    ,AGENTCODE=P.SERVICINGAGENT_ID      
  ,MOBILENUMBER=    
    isnull(        
    CASE         
     WHEN A.MOBILE_NUMBER IS NOT NULL AND A.MOBILE_NUMBER <> ''  AND A.MOBILE_NUMBER <> '0' THEN        
   CASE         
    WHEN LEFT(A.MOBILE_NUMBER,1) IN ( '8','2') THEN '62'+convert(varchar(20),A.MOBILE_NUMBER)         
    WHEN LEFT(A.MOBILE_NUMBER,1) IN ( '0') THEN '62'+substring(convert(varchar(20),A.MOBILE_NUMBER),2,99)      
    ELSE A.MOBILE_NUMBER        
   END        
     ELSE convert(varchar(20),A.MOBILE_NUMBER)         
    END,'0')        
     ,MSG = REPLACE(REPLACE(REPLACE(@SMS_WORDING,'@POLNUM',PM.POLICY_NUMBER),'@MATURITY_DATE',CONVERT(VARCHAR(10),PM.MATURITYDATE,103)) ,'@OWNNAME',OWNERNAME)      
   ,MSG_TYPE = @SMS_TYPE       
   ,COST_CENTER=@SMS_COST_CENTER      
   ,SRC =  'FWD'        
   ,ENV='PRD'        
   ,GENERATE_DATE=@PDATE      
  FROM dbo.REPORT_MATURITY_LETTER_HISTORY  PM WITH (NOLOCK)        
  INNER JOIN TR_POLICY P ON PM.POLICY_NUMBER=P.POLICY_NUMBER      
  INNER JOIN DM_AGENTS A ON P.SERVICINGAGENT_ID=A.AGENT_ID      
  LEFT JOIN DATA_SMS_HISTORY D ON PM.POLICY_NUMBER=D.POLICYNUMBER AND  PM.[GENERATE DATE] =DATEADD(DAY,-1,D.GENERATE_DATE) AND D.MSG_TYPE=@SMS_TYPE AND COST_CENTER=@SMS_COST_CENTER      
  WHERE A.MOBILE_NUMBER<>'' AND PM.[GENERATE DATE] =DATEADD(DAY,-1,@PDATE) AND D.POLICYNUMBER IS NULL      
   END      
      
   IF @SMS_TYPE='MTRMDR' OR @SMS_TYPE='ALL'      
   BEGIN      
    INSERT INTO DATA_SMS    
    SELECT     
    POLICYNUMBER= PM.POLICY_NUMBER         
    ,AGENTCODE=P.SERVICINGAGENT_ID      
  ,MOBILENUMBER=    
    isnull(        
    CASE         
     WHEN A.MOBILE_NUMBER IS NOT NULL AND A.MOBILE_NUMBER <> ''  AND A.MOBILE_NUMBER <> '0' THEN        
   CASE         
    WHEN LEFT(A.MOBILE_NUMBER,1) IN ( '8','2') THEN '62'+convert(varchar(20),A.MOBILE_NUMBER)         
    WHEN LEFT(A.MOBILE_NUMBER,1) IN ( '0') THEN '62'+substring(convert(varchar(20),A.MOBILE_NUMBER),2,99)        
    ELSE A.MOBILE_NUMBER        
   END        
     ELSE convert(varchar(20),A.MOBILE_NUMBER)         
    END,'0')        
     ,MSG = REPLACE(REPLACE(REPLACE(@SMS_WORDING,'@POLNUM',PM.POLICY_NUMBER),'@MATURITY_DATE',CONVERT(VARCHAR(10),PM.MATURITYDATE,103)) ,'@OWNNAME',OWNERNAME)      
   ,MSG_TYPE = @SMS_TYPE       
   ,COST_CENTER=@SMS_COST_CENTER      
   ,SRC =  'FWD'        
   ,ENV='PRD'       
   ,GENERATE_DATE=@PDATE      
  FROM dbo.REPORT_MATURITY_LETTER_HISTORY  PM WITH (NOLOCK)        
  INNER JOIN TR_POLICY P ON PM.POLICY_NUMBER=P.POLICY_NUMBER      
  INNER JOIN DM_AGENTS A ON P.SERVICINGAGENT_ID=A.AGENT_ID      
  LEFT JOIN DATA_SMS_HISTORY D ON PM.POLICY_NUMBER=D.POLICYNUMBER AND  PM.[GENERATE DATE] =DATEADD(DAY,-15,D.GENERATE_DATE) AND D.MSG_TYPE=@SMS_TYPE AND COST_CENTER=@SMS_COST_CENTER      
  WHERE A.MOBILE_NUMBER<>'' AND PM.[GENERATE DATE] =DATEADD(DAY,-15,@PDATE) AND D.POLICYNUMBER IS NULL      
   END             
/*    
Start of Added by Fauzan Zaky Subagyo    
For Unit Link Surrendering    
2023-08-28    
*/    
   IF @SMS_TYPE='RDAPPR'    
   BEGIN      
    INSERT INTO DATA_SMS    
    SELECT    
    PM.POLICY_NUMBER    
   ,AGENTCODE=P.SERVICINGAGENT_ID      
    ,MOBILENUMBER=    
    isnull(        
   CASE         
    WHEN C.MOBILENO IS NOT NULL AND C.MOBILENO <> ''  AND C.MOBILENO <> '0' THEN        
     CASE         
    WHEN LEFT(C.MOBILENO,1) IN ( '8','2') THEN '62'+convert(varchar(20),C.MOBILENO)         
    WHEN LEFT(C.MOBILENO,1) IN ( '0') THEN '62'+substring(convert(varchar(20),C.MOBILENO),2,99)        
    ELSE C.MOBILENO        
     END        
    ELSE convert(varchar(20),C.MOBILENO)         
   END,'0')      
    ,MSG = REPLACE(REPLACE(REPLACE(@SMS_WORDING,'@POLNUM',PM.POLICY_NUMBER),'@CURR',PM.CURRENCY) ,'@AMT',FORMAT(PM.FUND_AMOUNT, 'N0'))    
    ,MSG_TYPE = @SMS_TYPE       
    ,COST_CENTER=@SMS_COST_CENTER      
    ,SRC =  'FWD'        
    ,ENV='PRD'     
    ,GENERATE_DATE=@PDATE    
    FROM (    
  SELECT POL.POLICY_NUMBER,convert(varchar, PR.TRANSACTION_DATE, 23) AS TRANSACTION_DATE,PR.CURRENCY    
  ,ROUND(ABS(SUM(PR.AMOUNT)),0) AS FUND_AMOUNT     
  FROM TR_POLICY POL WITH (NOLOCK)    
  INNER JOIN LF_POLICYRECEIPT PR  WITH (NOLOCK) ON POL.POLICY_NUMBER=PR.POLICY_NUMBER AND PR.DATA_='PAYOUT'     
  INNER JOIN LF_POLICYACTIVITY PA WITH (NOLOCK) ON POL.POLICY_NUMBER=PA.POLICY_NUMBER AND PA.BATCHCODE IN ('T512') AND PA.TRAN_NO = PR.TRAN_NO    
  AND PR.SUB_ACCOUNT_CODE='LP' AND PR.SUB_ACCOUNT_TYPE='SO' AND PR.TRANSACATION_CODE IN ('T512')    
  INNER JOIN LA_PRODUCT PD ON POL.PLAN_CODE_BASIC=PD.PLAN_CODE    
  -- Request POS. Policy Credit Life di takeout.ADD BY DWT.20230926    
  AND POL.PARTNERSHIP<>'Credit Life'    
  GROUP BY POL.POLICY_NUMBER,PR.TRANSACTION_DATE,PR.CURRENCY        
  UNION     
  SELECT POL.POLICY_NUMBER,CONVERT(DATE,'20'+CAST(ACMV.TRANS_DATE AS VARCHAR(10))) AS TRANSACTION_DATE,ACMV.ORIGINAL_CURR AS CURRENCY    
  ,ROUND(ABS(SUM(ACMV.ORI_AMOUNT_CURRENCY)),0) AS FUND_AMOUNT     
  FROM TR_POLICY POL WITH (NOLOCK)    
  --Edit RDW - 20240924 - Fixing double record REQ0182867   
  ------------------------------------------------------------------------------------------------------------------  
  --INNER JOIN LF_POLICYACTIVITY PA WITH (NOLOCK) ON POL.POLICY_NUMBER=PA.POLICY_NUMBER AND PA.BATCHCODE IN ('T512')    
  INNER JOIN (SELECT POLICY_NUMBER, MAX(TRAN_NO) AS TRAN_NO                     FROM LF_POLICYACTIVITY WITH (NOLOCK)                     WHERE BATCHCODE IN ('T512') AND VALIDFLAG <> '2'                     GROUP BY POLICY_NUMBER) AS PA   
  ON POL.POLICY_NUMBER=PA.POLICY_NUMBER  
  ------------------------------------------------------------------------------------------------------------------   
  LEFT JOIN LF_POLICYRECEIPT PR  WITH (NOLOCK) ON POL.POLICY_NUMBER=PR.POLICY_NUMBER AND PR.DATA_='PAYOUT'     
  AND PR.SUB_ACCOUNT_CODE='LP' AND PR.SUB_ACCOUNT_TYPE='SO' AND PR.TRANSACATION_CODE IN ('T512')    
  --INNER JOIN LF_ACCOUNTMOVEMENT ACMV  WITH (NOLOCK) ON POL.POLICY_NUMBER=ACMV.POLICY_NUMBER AND ACMV.SUB_ACC_CODE='LP' AND ACMV.SUB_ACC_TYPE='SO' AND ACMV.BATCH_TRANS_CODE IN ('T512')    
  INNER JOIN (    
     SELECT    
     MAX(ID) as ID,    
     DOC_PREFIX,DOC_COMPANY,DOC_NUM,POLICY_NUMBER,TRAN_NO,TRANO_NO_REVERSAL,JOURNAL_SEQ_NUMBER,SUB_LEDGER_PREFIX,SUB_LEDGER_COMPANY,SUB_LEDGER_ACCOUNT_ENTITY,SUB_ACC_CODE,SUB_ACC_TYPE,BATCH_COMPANY,BATCH_BRANCH,BATCH_ACC_YEAR,  
     BATCH_ACC_MONTH,BATCH_TRANS_CODE,BATCH_NUMBER,ORIGINAL_CURR,ORI_AMOUNT_CURRENCY,TRANS_REFERENCE,TRANS_DESCRIPTION,CURRENCY_RATE,ACC_AMOUNT_CURRENCY,GL_COMPANY,GL_CURRENCY,GL_ACCOUNT_CODE,GL_POSTING_SIGN,POSTING_YEAR,  
     POSTING_MONTH,EFFECTIVE_DATE,DATE_TO,RECONCILE_AMOUNT,RECONCILE_DATE,INT_EXT_INDICATOR,TRANS_DATE,TRANS_TIME,USER_NUMBER,TERMINAL_ID,RECONCILE_TRIGGER_ROUTINE,SUPPRESS_FLAG,TAX_CODE,RECONCILE_REFF,STATEMENT_SORT_FIELD,  
     CREDIT_DUE_DATE,SYSTEMUPDATED_DATE,ETL_Proc_Flag,AUD_Type,AUD_Time,JOBNAME    
     FROM LF_ACCOUNTMOVEMENT ACMV WITH (NOLOCK)     
     WHERE ACMV.SUB_ACC_CODE='LP' AND ACMV.SUB_ACC_TYPE='SO' AND ACMV.BATCH_TRANS_CODE IN ('T512')    
     GROUP BY    
     DOC_PREFIX,DOC_COMPANY,DOC_NUM,POLICY_NUMBER,TRAN_NO,TRANO_NO_REVERSAL,JOURNAL_SEQ_NUMBER,SUB_LEDGER_PREFIX,SUB_LEDGER_COMPANY,SUB_LEDGER_ACCOUNT_ENTITY,SUB_ACC_CODE,SUB_ACC_TYPE,BATCH_COMPANY,BATCH_BRANCH,BATCH_ACC_YEAR,  
     BATCH_ACC_MONTH,BATCH_TRANS_CODE,BATCH_NUMBER,ORIGINAL_CURR,ORI_AMOUNT_CURRENCY,TRANS_REFERENCE,TRANS_DESCRIPTION,CURRENCY_RATE,ACC_AMOUNT_CURRENCY,GL_COMPANY,GL_CURRENCY,GL_ACCOUNT_CODE,GL_POSTING_SIGN,POSTING_YEAR,POSTING_MONTH,  
     EFFECTIVE_DATE,DATE_TO,RECONCILE_AMOUNT,RECONCILE_DATE,INT_EXT_INDICATOR,TRANS_DATE,TRANS_TIME,USER_NUMBER,TERMINAL_ID,RECONCILE_TRIGGER_ROUTINE,SUPPRESS_FLAG,TAX_CODE,RECONCILE_REFF,STATEMENT_SORT_FIELD,CREDIT_DUE_DATE,  
     SYSTEMUPDATED_DATE,ETL_Proc_Flag,AUD_Type,AUD_Time,JOBNAME    
     ) ACMV      
   ON POL.POLICY_NUMBER=ACMV.POLICY_NUMBER AND ACMV.SUB_ACC_CODE='LP' AND ACMV.SUB_ACC_TYPE='SO' AND ACMV.BATCH_TRANS_CODE IN ('T512')    
            --Add RDW - 20240924 - Fixing double record REQ0182867   
      ------------------------------------------------------  
            AND PA.TRAN_NO = ACMV.TRAN_NO  
   ------------------------------------------------------  
  INNER JOIN LA_PRODUCT PD ON POL.PLAN_CODE_BASIC=PD.PLAN_CODE    
  WHERE  PR.POLICY_NUMBER IS NULL     
  -- Request POS. Policy Credit Life di takeout.ADD BY DWT.20230926    
  AND POL.PARTNERSHIP<>'Credit Life'    
  GROUP BY POL.POLICY_NUMBER,'20'+CAST(ACMV.TRANS_DATE AS VARCHAR(10)),ACMV.ORIGINAL_CURR    
    )PM    
   INNER JOIN TR_POLICY P with(nolock) ON PM.POLICY_NUMBER=P.POLICY_NUMBER     
   INNER JOIN DM_AGENTS A with(nolock) ON P.SERVICINGAGENT_ID=A.AGENT_ID      
   INNER JOIN LF_CLIENT C with(nolock) ON P.CLIENT_ID=C.CLIENT_ID      
   LEFT JOIN DATA_SMS_HISTORY D ON PM.POLICY_NUMBER=D.POLICYNUMBER AND  PM.TRANSACTION_DATE =DATEADD(DAY,-1,D.GENERATE_DATE) AND D.MSG_TYPE=@SMS_TYPE AND COST_CENTER=@SMS_COST_CENTER      
   WHERE 0=0    
   AND PM.FUND_AMOUNT <> 0    
   AND C.MOBILENO<>''     
   AND PM.TRANSACTION_DATE =DATEADD(DAY,-1,@PDATE) AND D.POLICYNUMBER IS NULL     
   -- Request POS. Policy Credit Life di takeout.ADD BY DWT.20230926    
   AND P.PARTNERSHIP<>'Credit Life'        
  END      
/*    
End of Added by Fauzan Zaky Subagyo    
For Unit Link Surrendering    
2023-08-28    
*/    
    
/*    
Start of Added by Fauzan Zaky Subagyo    
For Unit Link Withdrawing    
2023-08-28    
*/    
   IF @SMS_TYPE='WDAPPR'    
   BEGIN      
     INSERT INTO DATA_SMS    
     SELECT    
     PM.POLICY_NUMBER    
   ,AGENTCODE=P.SERVICINGAGENT_ID      
    ,MOBILENUMBER=    
   isnull(        
   CASE         
    WHEN C.MOBILENO IS NOT NULL AND C.MOBILENO <> ''  AND C.MOBILENO <> '0' THEN        
  CASE         
    WHEN LEFT(C.MOBILENO,1) IN ( '8','2') THEN '62'+convert(varchar(20),C.MOBILENO)         
    WHEN LEFT(C.MOBILENO,1) IN ( '0') THEN '62'+substring(convert(varchar(20),C.MOBILENO),2,99)        
    ELSE C.MOBILENO        
  END        
    ELSE convert(varchar(20),C.MOBILENO)         
   END,'0')        
    ,MSG = REPLACE(REPLACE(REPLACE(@SMS_WORDING,'@POLNUM',PM.POLICY_NUMBER),'@CURR',PM.CURRENCY) ,'@AMT',FORMAT(PM.FUND_AMOUNT, 'N0'))    
    ,MSG_TYPE = @SMS_TYPE       
    ,COST_CENTER=@SMS_COST_CENTER      
    ,SRC =  'FWD'        
    ,ENV='PRD'    
    ,GENERATE_DATE=@PDATE    
    FROM (    
  SELECT POL.POLICY_NUMBER,convert(varchar, PR.TRANSACTION_DATE, 23) AS TRANSACTION_DATE,PR.CURRENCY    
  ,ROUND(ABS(SUM(PR.AMOUNT)),0) AS FUND_AMOUNT    
  FROM TR_POLICY POL WITH (NOLOCK)    
  INNER JOIN LF_POLICYRECEIPT PR  WITH (NOLOCK) ON POL.POLICY_NUMBER=PR.POLICY_NUMBER AND PR.DATA_='PAYOUT'    
  INNER JOIN LF_POLICYACTIVITY PA WITH (NOLOCK) ON POL.POLICY_NUMBER=PA.POLICY_NUMBER AND PA.BATCHCODE IN ('T510') AND PA.TRAN_NO = PR.TRAN_NO     
  AND PR.SUB_ACCOUNT_CODE='LP' AND PR.SUB_ACCOUNT_TYPE='SO' AND PR.TRANSACATION_CODE IN ('T510')    
  INNER JOIN LA_PRODUCT PD ON POL.PLAN_CODE_BASIC=PD.PLAN_CODE    
  -- Request POS. Policy Credit Life di takeout.ADD BY DWT.20230926    
  WHERE POL.PARTNERSHIP<>'Credit Life'    
  GROUP BY POL.POLICY_NUMBER,PR.TRANSACTION_DATE,PR.CURRENCY    
  UNION     
  SELECT POL.POLICY_NUMBER,CONVERT(DATE,'20'+CAST(ACMV.TRANS_DATE AS VARCHAR(10))) AS TRANSACTION_DATE,ACMV.ORIGINAL_CURR AS CURRENCY    
  ,ROUND(ABS(SUM(ACMV.ORI_AMOUNT_CURRENCY)),0) AS FUND_AMOUNT     
  FROM TR_POLICY POL WITH (NOLOCK)    
  INNER JOIN LF_POLICYACTIVITY PA WITH (NOLOCK) ON POL.POLICY_NUMBER=PA.POLICY_NUMBER AND PA.BATCHCODE IN ('T510')    
  LEFT JOIN LF_POLICYRECEIPT PR  WITH (NOLOCK) ON POL.POLICY_NUMBER=PR.POLICY_NUMBER AND PR.DATA_='PAYOUT'    
  AND PR.SUB_ACCOUNT_CODE='LP' AND PR.SUB_ACCOUNT_TYPE='SO' AND PR.TRANSACATION_CODE IN ('T510')    
  --INNER JOIN LF_ACCOUNTMOVEMENT ACMV  WITH (NOLOCK) ON POL.POLICY_NUMBER=ACMV.POLICY_NUMBER AND ACMV.SUB_ACC_CODE='LP' AND ACMV.SUB_ACC_TYPE='SO' AND ACMV.BATCH_TRANS_CODE IN ('T510')    
  INNER JOIN (    
     SELECT    
     MAX(ID) as ID,    
     DOC_PREFIX,DOC_COMPANY,DOC_NUM,POLICY_NUMBER,TRAN_NO,TRANO_NO_REVERSAL,JOURNAL_SEQ_NUMBER,SUB_LEDGER_PREFIX,SUB_LEDGER_COMPANY,SUB_LEDGER_ACCOUNT_ENTITY,SUB_ACC_CODE,SUB_ACC_TYPE,BATCH_COMPANY,BATCH_BRANCH,BATCH_ACC_YEAR,BATCH_ACC_MONTH,  
     BATCH_TRANS_CODE,BATCH_NUMBER,ORIGINAL_CURR,ORI_AMOUNT_CURRENCY,TRANS_REFERENCE,TRANS_DESCRIPTION,CURRENCY_RATE,ACC_AMOUNT_CURRENCY,GL_COMPANY,GL_CURRENCY,GL_ACCOUNT_CODE,GL_POSTING_SIGN,POSTING_YEAR,POSTING_MONTH,EFFECTIVE_DATE,DATE_TO,  
     RECONCILE_AMOUNT,RECONCILE_DATE,INT_EXT_INDICATOR,TRANS_DATE,TRANS_TIME,USER_NUMBER,TERMINAL_ID,RECONCILE_TRIGGER_ROUTINE,SUPPRESS_FLAG,TAX_CODE,RECONCILE_REFF,STATEMENT_SORT_FIELD,CREDIT_DUE_DATE,SYSTEMUPDATED_DATE,ETL_Proc_Flag,  
     AUD_Type,AUD_Time,JOBNAME    
     FROM LF_ACCOUNTMOVEMENT ACMV WITH (NOLOCK)     
     WHERE ACMV.SUB_ACC_CODE='LP' AND ACMV.SUB_ACC_TYPE='SO' AND ACMV.BATCH_TRANS_CODE IN ('T510')    
     GROUP BY    
     DOC_PREFIX,DOC_COMPANY,DOC_NUM,POLICY_NUMBER,TRAN_NO,TRANO_NO_REVERSAL,JOURNAL_SEQ_NUMBER,SUB_LEDGER_PREFIX,SUB_LEDGER_COMPANY,SUB_LEDGER_ACCOUNT_ENTITY,SUB_ACC_CODE,SUB_ACC_TYPE,BATCH_COMPANY,BATCH_BRANCH,BATCH_ACC_YEAR,  
     BATCH_ACC_MONTH,BATCH_TRANS_CODE,BATCH_NUMBER,ORIGINAL_CURR,ORI_AMOUNT_CURRENCY,TRANS_REFERENCE,TRANS_DESCRIPTION,CURRENCY_RATE,ACC_AMOUNT_CURRENCY,GL_COMPANY,GL_CURRENCY,GL_ACCOUNT_CODE,GL_POSTING_SIGN,POSTING_YEAR,  
     POSTING_MONTH,EFFECTIVE_DATE,DATE_TO,RECONCILE_AMOUNT,RECONCILE_DATE,INT_EXT_INDICATOR,TRANS_DATE,TRANS_TIME,USER_NUMBER,TERMINAL_ID,RECONCILE_TRIGGER_ROUTINE,SUPPRESS_FLAG,TAX_CODE,RECONCILE_REFF,STATEMENT_SORT_FIELD,  
     CREDIT_DUE_DATE,SYSTEMUPDATED_DATE,ETL_Proc_Flag,AUD_Type,AUD_Time,JOBNAME    
     ) ACMV      
   ON POL.POLICY_NUMBER=ACMV.POLICY_NUMBER AND ACMV.SUB_ACC_CODE='LP' AND ACMV.SUB_ACC_TYPE='SO' AND ACMV.BATCH_TRANS_CODE IN ('T510')              
   --Add RDW - 20240924 - Fixing double record REQ0182867   
      ------------------------------------------------------  
            AND PA.TRAN_NO = ACMV.TRAN_NO  
   ------------------------------------------------------  
  INNER JOIN LA_PRODUCT PD ON POL.PLAN_CODE_BASIC=PD.PLAN_CODE    
  WHERE  PR.POLICY_NUMBER IS NULL    
  -- Request POS. Policy Credit Life di takeout.ADD BY DWT.20230926    
  AND POL.PARTNERSHIP<>'Credit Life'    
  GROUP BY POL.POLICY_NUMBER,'20'+CAST(ACMV.TRANS_DATE AS VARCHAR(10)),ACMV.ORIGINAL_CURR    
    )PM    
   INNER JOIN TR_POLICY P with(nolock) ON PM.POLICY_NUMBER=P.POLICY_NUMBER     
   INNER JOIN DM_AGENTS A with(nolock)ON P.SERVICINGAGENT_ID=A.AGENT_ID      
   INNER JOIN LF_CLIENT C with(nolock)ON P.CLIENT_ID=C.CLIENT_ID      
   LEFT JOIN DATA_SMS_HISTORY D ON PM.POLICY_NUMBER=D.POLICYNUMBER AND  PM.TRANSACTION_DATE =DATEADD(DAY,-1,D.GENERATE_DATE) AND D.MSG_TYPE=@SMS_TYPE AND COST_CENTER=@SMS_COST_CENTER      
   WHERE 0=0    
   AND PM.FUND_AMOUNT <> 0    
   AND C.MOBILENO <> ''      
   AND PM.TRANSACTION_DATE = DATEADD(DAY,-1,@PDATE) AND D.POLICYNUMBER IS NULL      
   -- Request POS. Policy Credit Life di takeout.ADD BY DWT.20230926    
   AND P.PARTNERSHIP<>'Credit Life'            
 END       
/*    
End of Added by Fauzan Zaky Subagyo    
For Unit Link Withdrawing    
2023-08-28    
*/    
  
--Add 2023-12-08 RDW  
---------------------------------------------------------------------------------------------------------------------------------  
 IF @SMS_TYPE='EXPIREDCC'  
 BEGIN        
  INSERT INTO DATA_SMS  
  SELECT    
  POLICYNUMBER = PM.POLICY_NUMBER         
  ,AGENTCODE = NULL      
  ,PM.MOBILENUMBER       
  ,MSG = REPLACE(@SMS_WORDING,'@POLNUM',PM.POLICY_NUMBER)      
  ,MSG_TYPE = @SMS_TYPE       
  ,COST_CENTER = @SMS_COST_CENTER      
  ,SRC = 'FWD'        
  ,ENV = 'PRD'        
  ,GENERATE_DATE = @PDATE    
  FROM dbo.VW_EXPIREDCC_NEXTMONTH  PM WITH (NOLOCK)        
  LEFT JOIN DATA_SMS_HISTORY D WITH (NOLOCK)        
  ON PM.POLICY_NUMBER = D.POLICYNUMBER   
  AND CAST(D.[GENERATE_DATE] AS DATE) = CAST(@PDATE AS DATE) AND D.MSG_TYPE = @SMS_TYPE AND COST_CENTER = @SMS_COST_CENTER      
  WHERE PM.MOBILENUMBER <> '' AND PM.MANDATES_STATUS IN (10, 30, 35, 95)  
  AND PM.POLICY_STATUS = 'IF' AND PM.PREMIUM_STATUS = 'PP'  
  AND D.POLICYNUMBER IS NULL     
 END        
---------------------------------------------------------------------------------------------------------------------------------  
  
   FETCH NEXT FROM CURSOR2 INTO @SMS_TYPE ,@SMS_WORDING,@SMS_COST_CENTER     
   END          
   CLOSE CURSOR2        
   DEALLOCATE CURSOR2          

    DROP TABLE IF EXISTS CURSOR_SMS_TYPE     
   INSERT INTO DATA_SMS_HISTORY   (POLICYNUMBER,AGENTCODE,MOBILENUMBER,MSG,MSG_TYPE,COST_CENTER,SRC,ENV,GENERATE_DATE,SEND_FLAG)    
   SELECT POLICYNUMBER,AGENTCODE,MOBILENUMBER,MSG,MSG_TYPE,COST_CENTER,SRC,ENV,GENERATE_DATE,'N' SEND_FLAG FROM DATA_SMS WHERE GENERATE_DATE=@PDATE      
      
   -- FINAL QUERY      
   --SELECT * FROM DATA_SMS_UAT WHERE GENERATE_DATE=@PDATE      
     
END 


