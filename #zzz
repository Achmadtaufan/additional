-- Drop temp tables if exist
IF OBJECT_ID('tempdb..#TEMP_UL_TRANS') IS NOT NULL DROP TABLE #TEMP_UL_TRANS
IF OBJECT_ID('tempdb..#TEMP_INVESTMENT_HIST') IS NOT NULL DROP TABLE #TEMP_INVESTMENT_HIST
IF OBJECT_ID('tempdb..#FUNDPRICE') IS NOT NULL DROP TABLE #FUNDPRICE

-- Create TEMP_UL_TRANS table
SELECT POLICY_NUMBER, FUND_CODE,
       TRANSACTIONDATE = CASE 
                            WHEN EOMONTH(transactiondate) = EOMONTH(GETDATE()-1) 
                            THEN CONVERT(Date, GETDATE()-1) 
                            ELSE EOMONTH(TRANSACTIONDATE) 
                         END,
       FUND_UNIT = SUM(FUND_UNIT)
INTO #TEMP_UL_TRANS
FROM LF_POLFUNDTRANSACTION WITH (NOLOCK)
WHERE TRANSACTIONDATE <= CONVERT(DATE, GETDATE()-1) 
  AND POLICY_NUMBER NOT LIKE 'C%'
GROUP BY POLICY_NUMBER, FUND_CODE, EOMONTH(transactiondate)

UNION ALL

SELECT POLICY_NUMBER, FUND_CODE,
       TRANSACTIONDATE = CASE 
                            WHEN EOMONTH(transactiondate) = EOMONTH(GETDATE()-1) 
                            THEN CONVERT(Date, GETDATE()-1) 
                            ELSE EOMONTH(TRANSACTIONDATE) 
                         END,
       FUND_UNIT = SUM(FUND_UNIT)
FROM LF_POLFUNDTRANSACTION WITH (NOLOCK)
WHERE YEAR(TRANSACTIONDATE) <= YEAR(GETDATE())
  AND TRANSACTIONDATE <= CONVERT(DATE, GETDATE()-1)
  AND DEALING_DATE >= '20220201' 
  AND POLICY_NUMBER LIKE 'C%'
GROUP BY POLICY_NUMBER, FUND_CODE, EOMONTH(transactiondate)

UNION ALL

SELECT POLICY_NUMBER, FUND_CODE,
       TRANSACTIONDATE = EOMONTH('20220201'),
       FUND_UNIT = SUM(CURRENT_UNIT_BAL)
FROM LF_BALANCEMIGRATION_DETAIL WITH (NOLOCK)
GROUP BY POLICY_NUMBER, FUND_CODE

-- Create FUNDPRICE temp table to avoid multiple subquery calls
SELECT FUND_CODE, EFFECTIVE_FROM, EFFECTIVE_TO, FUND_PRICE
INTO #FUNDPRICE
FROM LF_FUNDPRICE
WHERE EFFECTIVE_FROM <= CONVERT(DATE, GETDATE())

-- Create TEMP_INVESTMENT_HIST table
SELECT CTE.POLICY_NUMBER,
       CTE.FUND_CODE,
       FND.LONGDESC AS FUNDNAME,
       FND.FUNDCURRENCY,
       CTE.TRANSACTIONDATE AS EFFECTIVE_DATE,
       PRC.EFFECTIVE_FROM AS PRICE_DATE,
       ISNULL(PRC.FUND_PRICE, 0) AS FUND_PRICE,
       SUM(CTE.FUND_UNIT) OVER(PARTITION BY CTE.POLICY_NUMBER, CTE.FUND_CODE ORDER BY CTE.TRANSACTIONDATE) AS FUND_UNIT,
       ISNULL(PRC.FUND_PRICE, 0) * SUM(CTE.FUND_UNIT) OVER(PARTITION BY CTE.POLICY_NUMBER, CTE.FUND_CODE ORDER BY CTE.TRANSACTIONDATE) AS FUND_AMOUNT
INTO #TEMP_INVESTMENT_HIST
FROM #TEMP_UL_TRANS CTE
LEFT JOIN LF_FUNDLIST FND WITH (NOLOCK)
  ON FND.FUNDCODE = CTE.FUND_CODE AND FND.LANGUAGE = 'E'
LEFT JOIN #FUNDPRICE PRC
  ON CTE.FUND_CODE = PRC.FUND_CODE
  AND CTE.TRANSACTIONDATE BETWEEN PRC.EFFECTIVE_FROM AND PRC.EFFECTIVE_TO

-- Final filter and ordering
SELECT *
FROM #TEMP_INVESTMENT_HIST
WHERE YEAR(EFFECTIVE_DATE) >= YEAR(GETDATE()-1)-4
ORDER BY POLICY_NUMBER, EFFECTIVE_DATE
