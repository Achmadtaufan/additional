  IF OBJECT_ID('TEMP_UL_TRANS','U') IS NOT NULL        
  BEGIN        
   DROP TABLE TEMP_UL_TRANS        
  END         
        
  SELECT *         
  INTO TEMP_UL_TRANS        
  FROM (         
      select POLICY_NUMBER,FUND_CODE,TRANSACTIONDATE= case when  EOMONTH(transactiondate) = EOMONTH(getdate()-1) then convert(Date,getdate()-1) else EOMONTH(TRANSACTIONDATE) end      
   --- dateadd(day,-1,dateadd(month,1,dateadd(day,-day(transactiondate)+1,transactiondate)))          
      ,FUND_UNIT=sum (FUND_UNIT)           
      from LF_POLFUNDTRANSACTION WITH (NOLOCK)           
      where  1=1 AND TRANSACTIONDATE <= CONVERT(DATE,GETDATE()-1) AND POLICY_NUMBER NOT LIKE 'C%'          
      group by POLICY_NUMBER,FUND_CODE ,EOMONTH(transactiondate)          
      UNION ALL          
      select POLICY_NUMBER,FUND_CODE,TRANSACTIONDATE,SUM(FUND_UNIT) FUND_UNIT          
      from (          
      select POLICY_NUMBER,FUND_CODE,TRANSACTIONDATE= case when  EOMONTH(transactiondate) = EOMONTH(getdate()-1) then convert(Date,getdate()-1) else EOMONTH(TRANSACTIONDATE) end      
   --- dateadd(day,-1,dateadd(month,1,dateadd(day,-day(transactiondate)+1,transactiondate)))          
      ,FUND_UNIT=sum (FUND_UNIT)           
      from LF_POLFUNDTRANSACTION WITH (NOLOCK)           
      where  1=1 and year(TRANSACTIONDATE)<=YEAR(GETDATE()) AND TRANSACTIONDATE <= CONVERT(DATE,GETDATE()-1)           
      AND DEALING_DATE>='20220201' AND POLICY_NUMBER  LIKE 'C%'           
      group by POLICY_NUMBER,FUND_CODE ,EOMONTH(transactiondate)          
      UNION           
      select s.POLICY_NUMBER,s.FUND_CODE,TRANSACTIONDATE= EOMONTH('20220201'),FUND_UNIT=sum (CURRENT_UNIT_BAL)           
      from LF_BALANCEMIGRATION_DETAIL s  WITH (NOLOCK)          
      where  1=1          
      group by s.POLICY_NUMBER,s.FUND_CODE) a          
      GROUP BY POLICY_NUMBER, FUND_CODE, TRANSACTIONDATE)  X        
        
        
        
  IF OBJECT_ID('TEMP_INVESTMENT_HIST','U') IS NOT NULL        
  BEGIN        
   DROP TABLE TEMP_INVESTMENT_HIST        
  END         
        
   SELECT X.*           
   INTO TEMP_INVESTMENT_HIST        
   FROM         
   (  SELECT     POLICY_NUMBER     ,CTE.FUND_CODE      ,FUNDNAME = FND.LONGDESC     ,FND.FUNDCURRENCY     ,EFFECTIVE_DATE = TRANSACTIONDATE     ,        
    PRICE_DATE = CASE WHEN CTE.TRANSACTIONDATE <= EOMONTH(DATEADD(MONTH,-1,EOMONTH(GETDATE()))) THEN  (SELECT PRC.EFFECTIVE_FROM FROM LF_FUNDPRICE PRC WHERE CTE.FUND_CODE = PRC.FUND_CODE AND CTE.TRANSACTIONDATE BETWEEN PRC.EFFECTIVE_FROM AND  EFFECTIVE_TO
)          
       ELSE (SELECT PRC.EFFECTIVE_FROM FROM LF_FUNDPRICE PRC WHERE CTE.FUND_CODE = PRC.FUND_CODE AND  CONVERT(DATE,GETDATE()-1) BETWEEN PRC.EFFECTIVE_FROM AND PRC.EFFECTIVE_TO)          END     ,        
    FUND_PRICE = CASE WHEN CTE.TRANSACTIONDATE <= EOMONTH(DATEADD(MONTH,-1,EOMONTH(GETDATE()))) THEN  ISNULL((SELECT PRC.FUND_PRICE FROM LF_FUNDPRICE PRC WHERE CTE.FUND_CODE =PRC.FUND_CODE AND CTE.TRANSACTIONDATE BETWEEN PRC.EFFECTIVE_FROM AND  EFFECTIVE_TO),0)     
   
       ELSE ISNULL((SELECT PRC.FUND_PRICE FROM LF_FUNDPRICE PRC WHERE CTE.FUND_CODE = PRC.FUND_CODE AND  CONVERT(DATE,GETDATE()-1) BETWEEN PRC.EFFECTIVE_FROM AND PRC.EFFECTIVE_TO),0)          END     ,        
   FUND_UNIT = SUM(FUND_UNIT) OVER(PARTITION BY POLICY_NUMBER,CTE.FUND_CODE ORDER BY POLICY_NUMBER,CTE.FUND_CODE,TRANSACTIONDATE)     ,        
   FUND_AMOUNT =ISNULL((SELECT PRC.FUND_PRICE FROM LF_FUNDPRICE PRC       
    WHERE CTE.FUND_CODE = PRC.FUND_CODE AND CTE.TRANSACTIONDATE BETWEEN PRC.EFFECTIVE_FROM AND  EFFECTIVE_TO),0)* SUM(FUND_UNIT) OVER(PARTITION BY POLICY_NUMBER,CTE.FUND_CODE ORDER BY POLICY_NUMBER,CTE.FUND_CODE,TRANSACTIONDATE)            
   FROM TEMP_UL_TRANS CTE             
   LEFT JOIN LF_FUNDLIST FND  (NOLOCK) ON FND.FUNDCODE = CTE.FUND_CODE AND FND.LANGUAGE='E'  )X           
  WHERE YEAR(EFFECTIVE_DATE) >=  YEAR(GETDATE()-1)-4    ORDER BY POLICY_NUMBER, EFFECTIVE_DATE       
END
