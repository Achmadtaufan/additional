-- Drop temp tables if exist
IF OBJECT_ID('tempdb..#TEMP_UL_TRANS') IS NOT NULL DROP TABLE #TEMP_UL_TRANS
IF OBJECT_ID('tempdb..#TEMP_INVESTMENT_HIST') IS NOT NULL DROP TABLE #TEMP_INVESTMENT_HIST
IF OBJECT_ID('tempdb..#FUNDPRICE') IS NOT NULL DROP TABLE #FUNDPRICE

-- Create TEMP_UL_TRANS table with pre-calculated EOMONTH
SELECT POLICY_NUMBER, FUND_CODE,
       TRANSACTIONDATE = CASE 
                            WHEN EOMONTH(transactiondate) = @LastEOMonth
                            THEN @LastEOMonthDate
                            ELSE EOMONTH(TRANSACTIONDATE) 
                         END,
       FUND_UNIT = SUM(FUND_UNIT)
INTO #TEMP_UL_TRANS
FROM LF_POLFUNDTRANSACTION WITH (NOLOCK)
WHERE TRANSACTIONDATE <= @Yesterday 
  AND POLICY_NUMBER NOT LIKE 'C%'
GROUP BY POLICY_NUMBER, FUND_CODE, EOMONTH(transactiondate)

UNION ALL

SELECT POLICY_NUMBER, FUND_CODE,
       TRANSACTIONDATE = CASE 
                            WHEN EOMONTH(transactiondate) = @LastEOMonth
                            THEN @LastEOMonthDate
                            ELSE EOMONTH(TRANSACTIONDATE) 
                         END,
       FUND_UNIT = SUM(FUND_UNIT)
FROM LF_POLFUNDTRANSACTION WITH (NOLOCK)
WHERE YEAR(TRANSACTIONDATE) <= YEAR(@Yesterday)
  AND TRANSACTIONDATE <= @Yesterday
  AND DEALING_DATE >= '20220201' 
  AND POLICY_NUMBER LIKE 'C%'
GROUP BY POLICY_NUMBER, FUND_CODE, EOMONTH(transactiondate)

UNION ALL

SELECT POLICY_NUMBER, FUND_CODE,
       TRANSACTIONDATE = EOMONTH('20220201'),
       FUND_UNIT = SUM(CURRENT_UNIT_BAL)
FROM LF_BALANCEMIGRATION_DETAIL WITH (NOLOCK)
GROUP BY POLICY_NUMBER, FUND_CODE

-- Pre-calculate EOMONTH and Yesterday for optimization
DECLARE @LastEOMonth DATE = EOMONTH(DATEADD(MONTH, -1, GETDATE()))
DECLARE @Yesterday DATE = DATEADD(DAY, -1, GETDATE())
DECLARE @LastEOMonthDate DATE = CONVERT(DATE, @Yesterday)

-- Create FUNDPRICE temp table to avoid multiple subquery calls
SELECT FUND_CODE, EFFECTIVE_FROM, EFFECTIVE_TO, FUND_PRICE
INTO #FUNDPRICE
FROM LF_FUNDPRICE
WHERE EFFECTIVE_FROM <= @Yesterday

-- Create TEMP_INVESTMENT_HIST table
SELECT CTE.POLICY_NUMBER,
       CTE.FUND_CODE,
       FND.LONGDESC AS FUNDNAME,
       FND.FUNDCURRENCY,
       CTE.TRANSACTIONDATE AS EFFECTIVE_DATE,
       PRC.EFFECTIVE_FROM AS PRICE_DATE,
       ISNULL(PRC.FUND_PRICE, 0) AS FUND_PRICE,
       FUND_UNIT = SUM(FUND_UNIT),
       FUND_AMOUNT = SUM(FUND_UNIT) * ISNULL(PRC.FUND_PRICE, 0)
INTO #TEMP_INVESTMENT_HIST
FROM #TEMP_UL_TRANS CTE
LEFT JOIN LF_FUNDLIST FND WITH (NOLOCK)
  ON FND.FUNDCODE = CTE.FUND_CODE AND FND.LANGUAGE = 'E'
LEFT JOIN #FUNDPRICE PRC
  ON CTE.FUND_CODE = PRC.FUND_CODE
  AND CTE.TRANSACTIONDATE BETWEEN PRC.EFFECTIVE_FROM AND PRC.EFFECTIVE_TO
GROUP BY CTE.POLICY_NUMBER, CTE.FUND_CODE, FND.LONGDESC, FND.FUNDCURRENCY, CTE.TRANSACTIONDATE, PRC.EFFECTIVE_FROM, PRC.FUND_PRICE

-- Final filter and ordering
SELECT *
FROM #TEMP_INVESTMENT_HIST
WHERE YEAR(EFFECTIVE_DATE) >= YEAR(@Yesterday) - 4
ORDER BY POLICY_NUMBER, EFFECTIVE_DATE
